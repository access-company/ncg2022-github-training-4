@charset    "UTF-8";

/* 
    共通のパラメータを定義する:root．
    この定数を呼び出す際は，
    param: var(*****); *****の部分に定数名を入れる．
 */
:root{
    --header_height:70px;
    --footer_height:40px;
    --main_color:red;
    --blade-orange:#ffa825;
    --console-black:#202020;
    --console-hard-gray:#929292;
    --console-gray:#c4c4c4;
    --console-llgray:#f0f0f0;
    --console-lgray:#fcfcfc;
    --console-bordergray:#f3f3f3;
    --searcher-blue:#00acc1;
    --searcher-pink:#ff6868;
    --table-hover-color:#a6d2e4;
    --light-yellow:#ffedd2;

    --toastWidth:300px; /* for svelte-toast */
}

body{
    word-break: break-word; /* 文字(等)は必ず折り返すよう設定．*/}


/* htmlは原則上から下に要素が積まれていくが，左から右に積みたい場合につけるクラス */
.com_row{display: flex;flex-direction: row;}
.com_column{display: flex;flex-direction: column;}
.com_between{justify-content: space-between;}
/* 書影に関するcommonCSS． */
.com_shoei{width:100px;min-width: 100px;}

.com_console-name{font-weight: bold;font-size: 20px;width:inherit;border-bottom:solid 2px var(--console-gray);padding:10px 0;margin-bottom:15px;}
.com_console-sub-name{font-weight: bold;font-size: 18px;width:inherit;padding:10px 0;margin-bottom:15px;}
.com_console-story-sub-name{font-weight: bold;font-size: 18px;width:inherit;padding:11px 0 0 0;margin-bottom:17px;}


/* table要素の親要素に <table class='com_table_stickey'>....</table>と定義すれば，あらかじめ用意した整形された「一覧用の表」スタイルを呼び出せる． */
table{width: 100%; overflow-x: scroll; white-space: nowrap;font-size: 13px; }
table.com_table_sticky ,table.com_table_sticky td,table.com_table_sticky th{border: solid 1px var(--console-bordergray); border-collapse: collapse;}

th{padding:20px 40px; text-align: center; background: var(--console-gray);}
td{padding:10px 20px;}
table.com_table_sticky tr:nth-child(2n-1){background: var(--console-lgray);}
th.thin{padding:20px 10px}
td.wide{padding:15px 40px;}
table.com_table_sticky {
    width:100%; margin:20px 0;
    display: block;
    overflow-y: scroll;
    border:10px solid white;
    max-height:70vh;
    -webkit-overflow-scrolling: touch;
    width:100%;
    border-collapse: collapse;
}
table.com_table_sticky thead th {
    position: sticky;
    top: -2px;
    z-index: 1;
}
.com_text_align_left{text-align: left;}

/* table要素に <table class='com_editor-table'>と定義すれば，あらかじめ用意した整形された「編集画面用の表」スタイルを呼び出せる． */
.com_editor-table{border-collapse: collapse;border-spacing: 0;}
.com_editor-table tr.space td{border: none;background: none;padding:30px 0px}
.com_editor-table td{border: solid 1px gray;padding:15px 100px 15px 20px;}
.com_editor-table td:nth-child(1){background: var(--console-gray);}
.com_editor-table td:nth-child(2){padding:15px 40px 15px 40px;}

table .com_wide_th{
    width:100%;
}

/* felte を使った際のエラーメッセージ表示スタイル．詳しくはcassette/edit.svelteが　わかりやすい．*/
.com_invalid_msg{
    font-size: 12px;
    color:var(--searcher-pink)
}


/*  チェックボックスの大きさをいじるCSS．
    html側は，classを定義することでこれらのスタイルを採用できる(<input class='com_large'> */
input.com_large{width:15px;height:15px;}

/*  チェックボックスの見た目を全ていじるCSS．
    html側は以下のようにチェックボックスをかくこと．
    <label class='com_checkbox'><input type="checkbox"><span class='com_checkmark'></span>{名前}</label>
*/
.com_checkbox{position: relative;margin: 1em 0;padding-left: 23px;cursor: pointer;}
.com_checkbox p{display: inline-block;margin: 2px 30px 5px 0;}
.com_checkbox input{display:none;}
.com_checkmark{position: absolute;top: 0;left: 0;height: 15px;width: 15px;border: solid 2px #d4dae2;border-radius: 4px;box-sizing: border-box;}
.com_checkmark:after {content: "";position: absolute;left: 3px;top: 0px;width: 6px;height: 10px;border: solid #FFF;border-width: 0 2px 2px 0;transform: rotate(45deg);opacity: 0;}
.com_checkbox input:checked + .com_checkmark {background: #00acc1;border-color: #00acc1;}
.com_checkbox input:checked + .com_checkmark:after {opacity: 1;}
.com_disable_checkbox{display: inline-block;width: 15px; height:15px; background-color: #d3d3d3; border:solid 2px #c5c5c5; border-radius: 3px;}

/*
    ラジオボタンの見た目をいじるCSS.
    html側は以下のようにチェックボックスをかくこと．
    <label class='com_radiobox'><input type="radio"><span class='com_radiomark'></span>{名前}</label>
*/
.com_radiobox{position: relative;margin: 1em 0;padding-left: 23px;cursor: pointer;}
.com_radiobox p{display: inline-block;margin: 2px 30px 5px 0;}
.com_radiobox input{display:none;}
.com_radiomark{position: absolute;top: 0;left: 0;height: 15px;width: 15px;border: solid 2px #d4dae2;border-radius: 8px;box-sizing: border-box;}
.com_radiomark:after {content: "";position: absolute;left: 1px;top: 1px;width: 9px;height: 9px; background:#00acc1;border-radius: 5px;opacity: 0;}
.com_radiobox input:checked + .com_radiomark {border-color: #00acc1;}
.com_radiobox input:checked + .com_radiomark:after {opacity: 1;}
.com_disable_radiobox{display: inline-block;width: 15px; height:15px; background-color: #d3d3d3; border:solid 2px #c5c5c5; border-radius: 3px;}

/* buttonのデフォルトを定義．ある程度整形されている．変えたい時は，各コンポーネント内で再定義すれば上書きされる */
button{color:white;margin:5px;font-size:16px;padding:5px 10px;background: var(--searcher-blue);border-radius: 5px;width:150px;transition: .3s;}
button.com_browser-back-button{background: var(--console-gray); padding: 0px 10px; font-size:14px; height:40px;}
button.com_browser-back-button:hover{background: var(--console-black);}
button:hover{background: var(--blade-orange);}
button.inactive{background: gray;}
/* 入れ替えボタンを定義する． */

/* 固定長の横幅を持つ要素に対して，最適にスクロールを実装したい時につけるクラス */
.com_scroll-x{overflow-x: scroll;}
.com_scroll-x::-webkit-scrollbar{overflow:hidden;height:2px;background:#fafafa;}
.com_scroll-x::-webkit-scrollbar-button{display:none;}
.com_scroll-x::-webkit-scrollbar-piece{background:#eee;}
.com_scroll-x::-webkit-scrollbar-piece:start{background:#eee;}
.com_scroll-x::-webkit-scrollbar-thumb{border-radius: 2px;border: solid 1px white;background:rgb(0, 0, 0);}


/* 固定長の縦幅を持つ要素に対して，最適にスクロールを実装したい時につけるクラス (y軸スクロールでは、スクロールバーを非表示にする。) */
.com_scroll-y{overflow-y: scroll;-ms-overflow-style: none;scrollbar-width: none;}
.com_scroll-y::-webkit-scrollbar {display:none;}
/* .com_scroll-y::-webkit-scrollbar{overflow:hidden;width:2px;background:#fafafa;}
.com_scroll-y::-webkit-scrollbar-button{display:none;}
.com_scroll-y::-webkit-scrollbar-piece{background:#eee;}
.com_scroll-y::-webkit-scrollbar-piece:start{background:#eee;}
.com_scroll-y::-webkit-scrollbar-thumb{border-radius: 2px;border: solid 1px white;background:rgb(0, 0, 0);} */

/* menubox用のCSS */
.com_switch-label {width: 50px;position: relative;display: inline-block;}
.com_switch-content {display: block;cursor: pointer;position: relative;border-radius: 30px;height: 35px;overflow: hidden;}
.com_switch-content:before {content: "";display: block;position: absolute;width: calc(100% - 3px);height: calc(100% - 3px);top: 0;left: 0;border: 1.5px solid var(--console-gray);border-radius: 30px;background-color: white;}
.com_switch-content:after {content: "";display: block;position: absolute;background-color: transparent;width: 0;height: 0;top: 50%;left: 50%;border-radius: 30px;-webkit-transition: all .5s;-moz-transition: all .5s;-ms-transition: all .5s;-o-transition: all .5s;transition: all .5s;}
.com_switch-input {display: none;} 
.com_switch-circle {display: block;top: 2px;left: 2px;position: absolute;-webkit-box-shadow: 0 2px 6px var(--console-gray);box-shadow: 0 2px 6px var(--console-gray);width: 27px;height: 27px;-webkit-border-radius: 20px;border-radius: 20px;background-color: #fff;-webkit-transition: all .5s;-moz-transition: all .5s;-ms-transition: all .5s;-o-transition: all .5s;transition: all .5s;}
.com_switch-input:checked ~ .com_switch-circle {left: 21px;}
.com_switch-input:checked ~ .com_switch-content:after {background-color: var(--searcher-blue);top: 0;left: 0;width: 100%;height: 31px;}

.com_indicator{
    position: relative;
    color:var(--searcher-pink)
}
.com_indicator:before{
    position: absolute;
    width:100px;height:100px;
    background: yellowgreen;
}

/* あえてmarginをゼロにしたい場合 */
.com_zero-margin{margin:0;}

/* 灰色のローダ画面を出す際のcss */
/*
    <section class="com_loading-gray-screen">
      <div class="com_loader-position">
        <!--この中は任意-->
        <LoadAnimation />
        <p>ファイルをアップロード中...</p> 
      </div>
    </section>
*/
.com_loading-gray-screen {
    position: fixed;
    z-index:100;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.7;
    background: white;
    
}
.com_loading-gray-screen .com_loader-position {
    position: absolute;
    top: 50%;
    left: 50%;
}
.com_loading-gray-screen .com_loader-position p {
    padding-top: 20px;
    font-weight: bold;
}
